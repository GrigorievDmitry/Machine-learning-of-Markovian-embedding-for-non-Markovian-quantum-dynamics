h_true = model_1.h
h = model_2.h
h_pert = np.kron(rnd.rand(2,2) + 1j*rnd.rand(2,2), np.eye(4,4))
h_pert = 0.5*(h_pert + h_pert.conj().T)
h_true = h_true + h_pert
h = h + h_pert
model_1.set_h(h_true)
model_2.set_h(h)

rho1 = model_1.get_evolution(20)
rho2 = model_2.get_evolution(20)
model_1.set_in_state(np.array([[1., 0.], [0., 1.]])/2)
model_2.set_in_state(np.array([[1., 0.], [0., 1.]])/2)
rho_zero1 = model_1.get_evolution(20)
rho_zero2 = model_2.get_evolution(20)
model_1.set_in_state(np.array([[0., 0.], [0., 1.]]))
model_2.set_in_state(np.array([[0., 0.], [0., 1.]]))

sx1 = np.einsum('kij,ij->k', rho1, sigma[0])
sx2 = np.einsum('kij,ij->k', rho2, sigma[0])
sy1 = np.einsum('kij,ij->k', rho1, sigma[1])
sy2 = np.einsum('kij,ij->k', rho2, sigma[1])
sz1 = np.einsum('kij,ij->k', rho1, sigma[2])
sz2 = np.einsum('kij,ij->k', rho2, sigma[2])
fig3 = plt.figure()
fig3.set_size_inches(10, 5)
fig3.subplots_adjust(wspace=0.25, hspace=0.35)
plt.subplot(2,2,1)
plt.ylim(top=1)
plt.ylim(bottom=-1)
plt.plot(sx1, 'r')
plt.plot(sx2, 'b')
plt.ylabel('$<\sigma_x>$')
plt.subplot(2,2,2)
plt.ylim(top=1)
plt.ylim(bottom=-1)
plt.plot(sy1, 'r')
plt.plot(sy2, 'b')
plt.ylabel('$<\sigma_y>$')
plt.subplot(2,2,3)
plt.ylim(top=1)
plt.ylim(bottom=-1)
plt.plot(sz1, 'r')
plt.plot(sz2, 'b')
plt.xlabel('Time')
plt.ylabel('$<\sigma_z>$')
plt.subplot(2,2,4)
diff1 = rho1 - rho_zero1
diff2 = rho2 - rho_zero2
tr_dist1 = np.sqrt(np.einsum('kij,kij->k', diff1, diff1.conj()))/np.sqrt(2)
tr_dist2 = np.sqrt(np.einsum('kij,kij->k', diff2, diff2.conj()))/np.sqrt(2)
plt.plot(tr_dist1, 'r')
plt.plot(tr_dist2, 'b')
plt.ylabel('Trace distance')
plt.xlabel('Time')
plt.savefig(f'pic/perturbation_more.pdf')